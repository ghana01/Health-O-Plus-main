












































export default mongoose.model("Doctor", DoctorSchema);});  appointments: [{ type: mongoose.Types.ObjectId, ref: "Appointment" }],  },    default: "pending",    enum: ["pending", "approved", "cancelled"],    type: String,  isApproved: {  },    default: 0,    type: Number,  totalRating: {  },    default: 0,    type: Number,  averageRating: {  reviews: [{ type: mongoose.Types.ObjectId, ref: "Review" }],  timeSlots: { type: Array },  about: { type: String },  bio: { type: String, maxLength: 50 },  },    type: Array,  experiences: {  },    type: Array,  qualifications: {  specialization: { type: String },  // Fields for doctors only  },    type: String,  role: {  ticketPrice: { type: Number },  photo: { type: String },  phone: { type: Number },  name: { type: String, required: true },  password: { type: String, required: true },  email: { type: String, required: true, unique: true },const DoctorSchema = new mongoose.Schema({import { useState } from 'react';import mongoose from "mongoose";